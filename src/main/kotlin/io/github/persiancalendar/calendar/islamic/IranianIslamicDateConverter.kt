package io.github.persiancalendar.calendar.islamic

/**
 * Credits of idea of this work goes to Saeed Rasooli and his
 * Kudos to his creative work!
 * I've tried to optimize its runtime performance, so it is a bit different from the way it is used in starcal.
 *
 * And Roozbeh Pournader has put a great effort to provide historical data for it, thanks so much!
 */
object IranianIslamicDateConverter {
    // This is a package public API used in the app
    const val latestSupportedYearOfIran = 1404
    private const val SUPPORTED_START_JDN = 2_397_421L
    internal const val SUPPORTED_START_YEAR = 1268
    private val jdSupportEnd: Long
    private val months: IntArray
    private val supportedYears: Int

    init {
        // https://github.com/roozbehp/qamari/commit/91c41b8171697cf760cad6cbfebe3ce6f8c3f0cc
        // https://calendar.ut.ac.ir/
        val hijriMonths = intArrayOf(
            /*1268*/ 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29,
            /*1269*/ 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,
            /*1270*/ 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29,
            /*1271*/ 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
            /*1272*/ 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30,
            /*1273*/ 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 30, 30,
            /*1274*/ 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 29, 30,
            /*1275*/ 30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30,
            /*1276*/ 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29,
            /*1277*/ 30, 29, 30, 29, 29, 30, 30, 29, 30, 30, 29, 30,
            /*1278*/ 29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30,
            /*1279*/ 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29, 30,
            /*1280*/ 30, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29,
            /*1281*/ 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
            /*1282*/ 29, 30, 30, 29, 30, 29, 30, 30, 29, 30, 29, 29,
            /*1283*/ 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30, 29,
            /*1284*/ 29, 30, 29, 30, 29, 29, 30, 30, 30, 29, 30, 30,
            /*1285*/ 29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30,
            /*1286*/ 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30,
            /*1287*/ 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30,
            /*1288*/ 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,
            /*1289*/ 30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 29, 30,
            /*1290*/ 29, 30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 29,
            /*1291*/ 30, 29, 29, 30, 29, 30, 30, 30, 30, 29, 30, 29,
            /*1292*/ 29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29,
            /*1293*/ 30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 29,
            /*1294*/ 30, 30, 29, 30, 29, 29, 30, 30, 29, 30, 29, 29,
            /*1295*/ 30, 30, 30, 29, 30, 29, 30, 30, 29, 29, 29, 30,
            /*1296*/ 29, 30, 30, 29, 30, 30, 29, 30, 30, 29, 29, 29,
            /*1297*/ 30, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29,
            /*1298*/ 29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 29,
            /*1299*/ 30, 29, 30, 29, 29, 30, 30, 29, 30, 30, 30, 29,
            /*1300*/ 29, 30, 29, 30, 29, 29, 30, 30, 29, 30, 30, 29,
            /*1301*/ 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29,
            /*1302*/ 30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
            /*1303*/ 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30,
            /*1304*/ 29, 29, 30, 30, 30, 29, 30, 30, 29, 30, 29, 29,
            /*1305*/ 30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30, 29,
            /*1306*/ 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29,
            /*1307*/ 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,
            /*1308*/ 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29,
            /*1309*/ 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
            /*1310*/ 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
            /*1311*/ 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30,
            /*1312*/ 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29,
            /*1313*/ 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30,
            /*1314*/ 29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29,
            /*1315*/ 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29,
            /*1316*/ 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29,
            /*1317*/ 30, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30,
            /*1318*/ 29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29,
            /*1319*/ 30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30, 29,
            /*1320*/ 30, 29, 29, 30, 30, 29, 29, 30, 30, 29, 30, 30,
            /*1321*/ 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30,
            /*1322*/ 30, 29, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30,
            /*1323*/ 30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30,
            /*1324*/ 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29,
            /*1325*/ 30, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29,
            /*1326*/ 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30,
            /*1327*/ 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,
            /*1328*/ 30, 29, 30, 29, 29, 29, 30, 30, 29, 30, 30, 30,
            /*1329*/ 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30,
            /*1330*/ 29, 30, 30, 29, 30, 29, 29, 29, 30, 30, 29, 30,
            /*1331*/ 29, 30, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29,
            /*1332*/ 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30,
            /*1333*/ 29, 29, 30, 30, 29, 30, 29, 30, 30, 30, 29, 29,
            /*1334*/ 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 30, 29,
            /*1335*/ 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 30,
            /*1336*/ 29, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
            /*1337*/ 29, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 30,
            /*1338*/ 29, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30,
            /*1339*/ 29, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29,
            /*1340*/ 29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29, 30,
            /*1341*/ 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29,
            /*1342*/ 30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30,
            /*1343*/ 29, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,
            /*1344*/ 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30,
            /*1345*/ 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30,
            /*1346*/ 29, 30, 30, 29, 30, 30, 30, 29, 29, 30, 29, 29,
            /*1347*/ 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29,
            /*1348*/ 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,
            /*1349*/ 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,
            /*1350*/ 30, 29, 29, 30, 30, 29, 29, 30, 29, 30, 30, 29,
            /*1351*/ 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29,
            /*1352*/ 30, 30, 29, 30, 30, 30, 29, 29, 29, 30, 29, 30,
            /*1353*/ 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
            /*1354*/ 29, 30, 30, 30, 30, 29, 30, 29, 29, 30, 29, 30,
            /*1355*/ 29, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29,
            /*1356*/ 30, 29, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30,
            /*1357*/ 29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29, 30,
            /*1358*/ 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,
            /*1359*/ 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 29, 30,
            /*1360*/ 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30,
            /*1361*/ 29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29,
            /*1362*/ 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30,
            /*1363*/ 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29,
            /*1364*/ 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
            /*1365*/ 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30,
            /*1366*/ 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,
            /*1367*/ 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29,
            /*1368*/ 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30,
            /*1369*/ 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30,
            /*1370*/ 29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30,
            /*1371*/ 29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 30, 29,
            /*1372*/ 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30,
            /*1373*/ 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30,
            /*1374*/ 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
            /*1375*/ 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29,
            /*1376*/ 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30,
            /*1377*/ 29, 30, 29, 29, 30, 30, 29, 30, 30, 30, 29, 30,
            /*1378*/ 29, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
            /*1379*/ 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30,
            /*1380*/ 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,
            /*1381*/ 30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
            /*1382*/ 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30,
            /*1383*/ 29, 29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 29,
            /*1384*/ 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29,
            /*1385*/ 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 30,
            /*1386*/ 29, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
            /*1387*/ 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30,
            /*1388*/ 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
            /*1389*/ 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29,
            /*1390*/ 30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29,
            /*1391*/ 29, 30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30,
            /*1392*/ 29, 29, 30, 29, 29, 30, 30, 29, 30, 30, 29, 30,
            /*1393*/ 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30,
            /*1394*/ 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29, 30,
            /*1395*/ 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 29, 30,
            /*1396*/ 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30,
            /*1397*/ 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29,
            /*1398*/ 30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30,
            /*1399*/ 29, 30, 29, 30, 29, 29, 30, 30, 29, 30, 30, 29,
            /*1400*/ 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 30,
            /*1401*/ 29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29,
            /*1402*/ 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,
            /*1403*/ 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,
            /*1404*/ 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30,
            /*1405*/ 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,
            /*1406*/ 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30,
            /*1407*/ 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29,
            /*1408*/ 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29,
            /*1409*/ 30, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30,
            /*1410*/ 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30,
            /*1411*/ 30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 29,
            /*1412*/ 30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29,
            /*1413*/ 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,
            /*1414*/ 29, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30, 30,
            /*1415*/ 30, 30, 29, 29, 29, 30, 29, 29, 29, 30, 30, 30,
            /*1416*/ 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29,
            /*1417*/ 30, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 29,
            /*1418*/ 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 30, 29,
            /*1419*/ 29, 30, 29, 30, 29, 30, 30, 29, 29, 30, 30, 30,
            /*1420*/ 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,
            /*1421*/ 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30, 30,
            /*1422*/ 29, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30,
            /*1423*/ 29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30,
            /*1424*/ 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,
            /*1425*/ 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30,
            /*1426*/ 29, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29,
            /*1427*/ 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30,
            /*1428*/ 29, 30, 29, 29, 29, 30, 30, 29, 30, 30, 30, 29,
            /*1429*/ 30, 29, 30, 29, 29, 29, 30, 30, 29, 30, 30, 29,
            /*1430*/ 30, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30, 29,
            /*1431*/ 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29,
            /*1432*/ 30, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29,
            /*1433*/ 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30,
            /*1434*/ 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29,
            /*1435*/ 29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30,
            /*1436*/ 29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30,
            /*1437*/ 29, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30,
            /*1438*/ 29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30,
            /*1439*/ 29, 30, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29,
            /*1440*/ 30, 29, 30, 30, 30, 29, 30, 30, 29, 29, 30, 29,
            /*1441*/ 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,
            /*1442*/ 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,
            /*1443*/ 29, 30, 30, 29, 29, 30, 29, 30, 30, 29, 30, 29,
            /*1444*/ 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 29,
            /*1445*/ 30, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 29,
            /*1446*/ 30, 30, 30, 29, 30, 30, 29, 30, 29, 29, 29, 30,
            /*1447*/ 29, 30, 30, 29, 30, 30, 30, 29, 30,/**/29, 29, 29,
            /*1448*/ 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29,
            /*1449*/ 30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29, 29
        )
        supportedYears = hijriMonths.size / 12
        months = IntArray(hijriMonths.size)
        var jd = 0
        for (m in hijriMonths.indices) {
            months[m] = jd
            jd += hijriMonths[m]
        }
        jdSupportEnd = jd + SUPPORTED_START_JDN
    }

    internal fun toJdn(year: Int, month: Int, day: Int): Long {
        val yearIndex = year - SUPPORTED_START_YEAR
        return if (yearIndex < 0 || yearIndex >= supportedYears) -1 else months[yearIndex * 12 + month - 1] + day + SUPPORTED_START_JDN - 1
    }

    internal fun fromJdn(jd: Long): IntArray? {
        if (jd < SUPPORTED_START_JDN || jd >= jdSupportEnd) return null
        val days = (jd - SUPPORTED_START_JDN).toInt()
        var index =
            (days / 29.61).toInt() // It is an estimation of lunar month length which is 29.53059
        while (index + 1 < months.size && months[index + 1] <= days) ++index
        val yearIndex = index / 12
        val month = index % 12
        val day = days - months[index]
        return intArrayOf(yearIndex + SUPPORTED_START_YEAR, month + 1, day + 1)
    }
}
